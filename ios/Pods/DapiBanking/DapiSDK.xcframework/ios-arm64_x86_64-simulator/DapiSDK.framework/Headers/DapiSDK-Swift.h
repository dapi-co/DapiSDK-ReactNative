#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef DAPISDK_SWIFT_H
#define DAPISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <DapiSDK/DapiSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DapiSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class DAPILineAddress;
@class DAPIAccountRange;
@class DAPIPair;
@class DAPITransferBound;

SWIFT_CLASS_NAMED("DAPIAccountMetadata")
@interface DAPIAccountMetadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull bankID;
@property (nonatomic, readonly, strong) DAPILineAddress * _Nullable address;
@property (nonatomic, readonly, copy) NSString * _Nullable bankName;
@property (nonatomic, readonly, copy) NSString * _Nullable bankType;
@property (nonatomic, readonly, strong) DAPIAccountRange * _Nullable beneficiaryCoolDownPeriod;
@property (nonatomic, readonly, copy) NSString * _Nullable branchAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable branchName;
@property (nonatomic, readonly, strong) DAPIPair * _Nullable country;
@property (nonatomic, readonly) BOOL isCreateBenefEndpointRequired;
@property (nonatomic, readonly) BOOL isCreateWireBenefEndpointRequired;
@property (nonatomic, readonly, copy) NSString * _Nullable sortCode;
@property (nonatomic, readonly, copy) NSString * _Nullable swiftCode;
@property (nonatomic, readonly, strong) DAPIAccountRange * _Nullable transactionRange;
@property (nonatomic, readonly, copy) NSArray<DAPITransferBound *> * _Nullable transferBounds;
@property (nonatomic, readonly) BOOL willNewlyAddedBenefExistBeforeCoolDownPeriod;
@end


SWIFT_CLASS_NAMED("DAPIAccountMetadataResponse")
@interface DAPIAccountMetadataResponse : NSObject
@property (nonatomic, readonly, strong) DAPIAccountMetadata * _Nonnull accountsMetadata;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

@class NSNumber;

SWIFT_CLASS_NAMED("DAPIAccountRange")
@interface DAPIAccountRange : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull unit;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull rangeValue;
@end


SWIFT_CLASS_NAMED("DAPIAddress")
@interface DAPIAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable flat;
@property (nonatomic, copy) NSString * _Nullable building;
@property (nonatomic, copy) NSString * _Nullable full;
@property (nonatomic, copy) NSString * _Nullable area;
@property (nonatomic, copy) NSString * _Nullable poBox;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable zipCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DAPIAutoFlowVC;
@class DAPIBankAccount;
@class DAPIBeneficiary;
@class DAPIWireBeneficiary;
@class DAPITransferResult;

SWIFT_PROTOCOL_NAMED("DAPIAutoFlowDelegate")
@protocol DAPIAutoFlowDelegate
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow willTransferAmount:(float)amount fromAccount:(DAPIBankAccount * _Nonnull)senderAccount;
@optional
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow transferDidFailFrom:(DAPIBankAccount * _Nullable)senderAccount to:(DAPIBeneficiary * _Nullable)beneficiary with:(NSError * _Nonnull)error;
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow transferDidFailFrom:(DAPIBankAccount * _Nullable)senderAccount toWireBeneficiary:(DAPIWireBeneficiary * _Nullable)beneficiary with:(NSError * _Nonnull)error;
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow achPullTransferDidFailFrom:(DAPIBankAccount * _Nullable)senderAccount with:(NSError * _Nonnull)error;
@required
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow transferDidSuccessFrom:(DAPIBankAccount * _Nonnull)senderAccount transferResult:(DAPITransferResult * _Nonnull)transferResult;
- (void)autoFlowUserDidCanceled:(DAPIAutoFlowVC * _Nonnull)autoFlow;
@end

@class DAPIBankConnection;
enum DAPITransferType : NSInteger;
@class NSCoder;
@class UIViewController;
@class NSBundle;

/// Initiate a payment and automatically takes care of all requirements for adding a beneficiary as well as initiating a transfer.
/// <a href="https://docs.dapi.com/docs/ios-payment-api">Check How To Use Dapi AutoFlow </a>.
SWIFT_CLASS("_TtC7DapiSDK14DAPIAutoFlowVC")
@interface DAPIAutoFlowVC : UINavigationController
@property (nonatomic, copy) void (^ _Nullable transferDidSucceed)(DAPITransferResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable transferDidFail)(NSError * _Nonnull);
/// The object that acts as the delegate of the <code>DAPIAutoFlowVC</code>.
@property (nonatomic, weak) id <DAPIAutoFlowDelegate> _Nullable autoFlowDelegate;
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable successResultsScreenMessageManipulation)(DAPITransferResult * _Nullable);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable errorResultsScreenMessageManipulation)(NSError * _Nonnull);
/// Initiate a payment and automatically takes care of all requirements for adding a beneficiary as well as initiating a transfer.
/// <a href="https://docs.dapi.com/docs/ios-payment-api">Check How To Use Dapi AutoFlow </a>.
/// \param bankConnection A connection to the bank that will be used to call APIs upon. The connection will include details about the bank. <a href="https://docs.dapi.com/docs/ios-create-bank-connection">Check How To Create Bank Connection </a>.
///
/// \param account Account where the amount must be transferred from.If you don’t provide it, AutoFlow will start display bank accounts screen for your user to pick the account from it.
///
/// \param wireBeneficiary WireBeneficiary that will receive the money. If you are accepting a transfer into your own company’s account, you don’t need to set the parameter. You can simply add one in your dashboard under your app. The wireBeneficiary will automatically be set to that account from there. <em>Set it if you only use</em> [Wire API (US only)] (https://docs.dapi.com/docs/ios-wire-api-us)
///
/// \param beneficiary Beneficiary that will receive the amount. If in your use case the beneficiary is a constant, you can set the beneficiary on the Dapi Dashboard. It will be automatically used during a transfer by Dapi system.
///
/// \param transferType Set it with <code>wire</code> value <em>if you only use</em> <a href="https://docs.dapi.com/docs/ios-wire-api-us">Wire API (US only)</a>
///
/// \param amount Amount to be transferred. If you don’t set an amount SDK will display a screen with a numpad screen for your user to enter the amount.
///
/// \param remark Unique ID generated by your application. Can be used to track the transfer during settlement. <em>NB! No special characters allowed</em>.
///
- (nonnull instancetype)initWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection account:(DAPIBankAccount * _Nullable)account wireBeneficiary:(DAPIWireBeneficiary * _Nullable)wireBeneficiary beneficiary:(DAPIBeneficiary * _Nullable)beneficiary transferType:(enum DAPITransferType)transferType amount:(float)amount remark:(NSString * _Nullable)remark OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBankConnectionForACHPullTransfer:(DAPIBankConnection * _Nonnull)connection account:(DAPIBankAccount * _Nullable)account amount:(float)amount description:(NSString * _Nonnull)description OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBankConnectionForNymCard:(DAPIBankConnection * _Nonnull)connection token:(NSString * _Nonnull)token account:(DAPIBankAccount * _Nullable)account amount:(float)amount OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class DPCNumPadDisplayViewController;

@interface DAPIAutoFlowVC (SWIFT_EXTENSION(DapiSDK)) <DPCNumPadDisplayViewControllerDelegate>
- (void)numPadDisplayViewController:(DPCNumPadDisplayViewController * _Nonnull)viewController didSubmitValue:(double)value;
@end

@class MessageViewController;

@interface DAPIAutoFlowVC (SWIFT_EXTENSION(DapiSDK)) <MessageViewControllerDelegate>
- (void)messageViewControllerDidTapButton:(MessageViewController * _Nonnull)messageViewController error:(NSError * _Nullable)error;
@end

@class UIPresentationController;

@interface DAPIAutoFlowVC (SWIFT_EXTENSION(DapiSDK)) <UIAdaptivePresentationControllerDelegate>
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
@end




SWIFT_CLASS_NAMED("DAPIBalance")
@interface DAPIBalance : NSObject
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic) float amount;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@end


SWIFT_CLASS_NAMED("DAPIBankAccount")
@interface DAPIBankAccount : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull accountID;
@property (nonatomic, copy) NSString * _Nullable number;
@property (nonatomic, copy) NSString * _Nullable iban;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, strong) DAPIBalance * _Nonnull balance;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
@end


SWIFT_CLASS_NAMED("DAPIBankAccountsResponse")
@interface DAPIBankAccountsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<DAPIBankAccount *> * _Nonnull accounts;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end


SWIFT_CLASS("_TtC7DapiSDK18DAPIBankAccountsVC")
@interface DAPIBankAccountsVC : UIViewController
@property (nonatomic, copy) void (^ _Nullable accountDidSelect)(DAPIBankAccount * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable accountSelectionFailed)(NSError * _Nullable);
- (nonnull instancetype)initWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class UITableView;
@class NSIndexPath;
@class UITableViewCell;

@interface DAPIBankAccountsVC (SWIFT_EXTENSION(DapiSDK)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class DAPIBankBeneficiary;

SWIFT_CLASS_NAMED("DAPIBankBeneficiariesResponse")
@interface DAPIBankBeneficiariesResponse : NSObject
@property (nonatomic, copy) NSArray<DAPIBankBeneficiary *> * _Nonnull beneficiaries;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end


SWIFT_CLASS_NAMED("DAPIBankBeneficiary")
@interface DAPIBankBeneficiary : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull beneficiaryID;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable iban;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable status;
@end

enum DAPICardStatus : NSInteger;
@class DAPICardBalance;
@class NSDate;

SWIFT_CLASS_NAMED("DAPIBankCard")
@interface DAPIBankCard : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull cardID;
@property (nonatomic, copy) NSString * _Nullable cardNumber;
@property (nonatomic, readonly, strong) NSNumber * _Nullable creditLimitValue;
@property (nonatomic, readonly) enum DAPICardStatus cardStatus;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, strong) DAPICardBalance * _Nullable balance;
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, readonly, copy) NSDate * _Nullable cardExpiryDate;
@end


SWIFT_CLASS_NAMED("DAPIBankCardsResponse")
@interface DAPIBankCardsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<DAPIBankCard *> * _Nonnull cards;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

@class DAPIBankInfo;

SWIFT_CLASS_NAMED("DAPIBankConnection")
@interface DAPIBankConnection : NSObject
@property (nonatomic, copy) NSString * _Nonnull userSecret;
@property (nonatomic, copy) NSString * _Nonnull connectionID;
@property (nonatomic, copy) NSString * _Nonnull userID;
@property (nonatomic, copy) NSString * _Nonnull tokenID;
@property (nonatomic, copy) NSString * _Nonnull clientUserID;
@property (nonatomic, strong) DAPIBankInfo * _Nonnull bankInfo;
@property (nonatomic, readonly) NSUInteger hash;
- (NSDictionary<NSString *, id> * _Nonnull)getParameters SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("DAPIBankInfo")
@interface DAPIBankInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull bankId;
@property (nonatomic, copy) NSString * _Nonnull bankFullName;
@property (nonatomic, copy) NSString * _Nullable bankShortName;
@property (nonatomic, copy) NSString * _Nullable bankFullLogoPng;
@property (nonatomic, copy) NSString * _Nullable bankHalfLogoPng;
@property (nonatomic, copy) NSString * _Nullable bankMiniLogoPng;
@property (nonatomic, copy) NSString * _Nullable primaryColor;
@property (nonatomic, copy) NSString * _Nullable secondaryColor;
@property (nonatomic, copy) NSString * _Nullable swiftCode;
@property (nonatomic, copy) NSString * _Nullable countryName;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("DAPIBankTransactionBrand")
@interface DAPIBankTransactionBrand : NSObject
@property (nonatomic, copy) NSString * _Nullable logo;
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DAPIBankWireBeneficiary;

SWIFT_CLASS_NAMED("DAPIBankWireBeneficiariesResponse")
@interface DAPIBankWireBeneficiariesResponse : NSObject
@property (nonatomic, copy) NSArray<DAPIBankWireBeneficiary *> * _Nonnull beneficiaries;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

@class DAPIWireAddress;

SWIFT_CLASS_NAMED("DAPIBankWireBeneficiary")
@interface DAPIBankWireBeneficiary : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull beneficiaryID;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DAPIWireAddress * _Nullable address;
@property (nonatomic, copy) NSString * _Nullable bankName;
@property (nonatomic, copy) NSString * _Nullable routingNumber;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("DAPIBeneficiary")
@interface DAPIBeneficiary : NSObject
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable bankName;
@property (nonatomic, copy) NSString * _Nullable swiftCode;
@property (nonatomic, copy) NSString * _Nullable iban;
@property (nonatomic, copy) NSString * _Nullable phoneNumber;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable branchAddress;
@property (nonatomic, copy) NSString * _Nullable branchName;
@property (nonatomic, copy) NSString * _Nullable nickname;
@property (nonatomic, strong) DAPILineAddress * _Nullable linesAddress;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPICardBalance")
@interface DAPICardBalance : NSObject
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, copy) NSString * _Nullable cardNumber;
@property (nonatomic, copy) NSString * _Nullable dueDate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable outstandingBalanceValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable availableBalanceValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable amountDueValue;
@property (nonatomic, readonly, copy) NSDate * _Nullable paymentDueDate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPICardStatus, "DAPICardStatus", open) {
  DAPICardStatusActive = 0,
  DAPICardStatusDisabled = 1,
  DAPICardStatusBlocked = 2,
  DAPICardStatusUnknown = 3,
};

@class UIColor;

SWIFT_CLASS_NAMED("DAPIColor")
@interface DAPIColor : NSObject
@property (nonatomic, copy) NSString * _Nullable lightModeHexaCode;
@property (nonatomic, copy) NSString * _Nullable darkModeHexaCode;
@property (nonatomic, readonly, strong) UIColor * _Nonnull lightModeColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull darkModeColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum DAPILanguage : NSInteger;
@class NSURLRequest;
@class DapiURLResponse;
@class NSData;

/// Properties that the developer can tweak. For more details <a href="https://docs.dapi.com/docs/ios-sdk-configuration">Visit Our Docs</a>
SWIFT_CLASS_NAMED("DAPIConfigurations")
@interface DAPIConfigurations : NSObject
@property (nonatomic) BOOL showLogos;
/// You can show the transfer result screen if it success.  For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration#show-transfer-result-screen">Visit Our Docs</a>
@property (nonatomic) BOOL showTransferSuccessfulResult;
/// You can show the transfer result screen if it fails.  For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration#show-transfer-result-screen">Visit Our Docs</a>
@property (nonatomic) BOOL showTransferErrorResult;
/// Set SDK language, the default value is english For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration#create-sdk-configurations">Visit Our Docs</a>
@property (nonatomic) enum DAPILanguage language;
/// You can show the Dapi networking requests  logs in the debug console
@property (nonatomic) BOOL enableNetworkingLogging;
/// Completion fires before sending the request to the backend server.
/// If you will use this completion , you need to return the request in a formate that required from your backend server.
@property (nonatomic, copy) NSURLRequest * _Nonnull (^ _Nullable requestInterceptionCompletion)(DAPIBankConnection * _Nullable, NSURLRequest * _Nonnull);
/// Completion fires after receiving the response from the backend server.
/// If you will use this completion , you need to return the response in a in a formate that required from DAPI SDK.
@property (nonatomic, copy) NSData * _Nullable (^ _Nullable responseInterceptionCompletion)(DAPIBankConnection * _Nullable, DapiURLResponse * _Nonnull);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class DAPIConnectVC;

SWIFT_PROTOCOL("_TtP7DapiSDK19DAPIConnectDelegate_")
@protocol DAPIConnectDelegate
/// Tells the delegate that user successfully authenticated
- (void)dapiConnect:(DAPIConnectVC * _Nonnull)dapiConnect didSuccessfullyConnectTo:(NSString * _Nullable)bankID bankConnection:(DAPIBankConnection * _Nonnull)bankConnection;
/// Tells the delegate that bank connection failed with error message
- (void)dapiConnect:(DAPIConnectVC * _Nonnull)dapiConnect didFailConnectingWith:(NSString * _Nonnull)error;
/// Tells the delegate that user closed <code>dapiConnect</code> ViewController
- (void)dapiConnectUserDidCancel:(DAPIConnectVC * _Nonnull)dapiConnect;
@end


/// Create bank connection using connect layer
/// All Bank Connections need to be established through Dapi’s Connect Layer. Connect Layer is already embedded in the SDK and allows the users to choose the desired bank and provide their credentials.
/// For more information, see <a href="https://docs.dapi.com/docs/ios-create-bank-connection#bank-connection-using-connect-layer">Dapi Documentation.</a>
SWIFT_CLASS("_TtC7DapiSDK13DAPIConnectVC")
@interface DAPIConnectVC : UIViewController
@property (nonatomic, weak) id <DAPIConnectDelegate> _Nullable delegate;
- (nonnull instancetype)initWithBankID:(NSString * _Nullable)bankID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface DAPIConnectVC (SWIFT_EXTENSION(DapiSDK)) <UIAdaptivePresentationControllerDelegate>
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
@end


@interface DAPIConnectVC (SWIFT_EXTENSION(DapiSDK)) <MessageViewControllerDelegate>
- (void)messageViewControllerDidTapButton:(MessageViewController * _Nonnull)messageViewController error:(NSError * _Nullable)error;
@end

@class WKWebView;
@class WKWebViewConfiguration;
@class WKNavigationAction;
@class WKWindowFeatures;

@interface DAPIConnectVC (SWIFT_EXTENSION(DapiSDK)) <WKNavigationDelegate, WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("DAPICoolDownPeriod")
@interface DAPICoolDownPeriod : NSObject
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, readonly, strong) NSNumber * _Nullable coolDownPeriodValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Dapi run environments
typedef SWIFT_ENUM_NAMED(NSInteger, DAPIEnvironment, "DAPIEnvironment", open) {
/// Allows you to run with real users and financial institutions with the full Dapi API.
  DAPIEnvironmentProduction = 0,
/// Allows you to simulate users and financial institutions with the full Dapi API, learn more: <a href="https://docs.dapi.com/docs/dapi-api-sandbox">Get Started with Sandbox</a>.
  DAPIEnvironmentSandbox = 1,
};


SWIFT_CLASS_NAMED("DAPIIdentification")
@interface DAPIIdentification : NSObject
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DAPINumber;

SWIFT_CLASS_NAMED("DAPIIdentity")
@interface DAPIIdentity : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nationality;
@property (nonatomic, copy) NSString * _Nullable dateOfBirth;
@property (nonatomic, copy) NSString * _Nullable emailAddress;
@property (nonatomic, strong) DAPIAddress * _Nullable address;
@property (nonatomic, copy) NSArray<DAPINumber *> * _Nullable numbers;
@property (nonatomic, copy) NSArray<DAPIIdentification *> * _Nullable identifications;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIIdentityResponse")
@interface DAPIIdentityResponse : NSObject
@property (nonatomic, readonly, strong) DAPIIdentity * _Nonnull identity;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPILanguage, "DAPILanguage", open) {
  DAPILanguageAr = 0,
  DAPILanguageEn = 1,
};


SWIFT_CLASS_NAMED("DAPILineAddress")
@interface DAPILineAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable line1;
@property (nonatomic, copy) NSString * _Nullable line2;
@property (nonatomic, copy) NSString * _Nullable line3;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPINumber")
@interface DAPINumber : NSObject
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIPair")
@interface DAPIPair : NSObject
@property (nonatomic, copy) NSString * _Nullable code;
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIResponseResult")
@interface DAPIResponseResult : NSObject
@property (nonatomic, copy) NSString * _Nullable operationID;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCodeValue;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) DAPICoolDownPeriod * _Nullable coolDownPeriod;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPITheme, "DAPITheme", open) {
  DAPIThemeDark = 0,
  DAPIThemeDynamic = 1,
  DAPIThemeLight = 2,
};


SWIFT_CLASS_NAMED("DAPITransaction")
@interface DAPITransaction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, readonly) float amount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable beforeAmountValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable afterAmountValue;
@property (nonatomic, readonly, copy) NSString * _Nullable transactionDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable details;
@property (nonatomic, readonly, strong) DAPIPair * _Nullable currency;
@property (nonatomic, readonly, copy) NSString * _Nullable reference;
@property (nonatomic, readonly, strong) DAPIBankTransactionBrand * _Nullable brandDetails;
@property (nonatomic, readonly, copy) NSString * _Nullable category;
@property (nonatomic, readonly, copy) NSString * _Nullable date;
@property (nonatomic, readonly, copy) NSDate * _Nullable transactionDate;
@end

/// Enum to specify transactions type.
typedef SWIFT_ENUM_NAMED(NSInteger, DAPITransactionType, "DAPITransactionType", open) {
/// Each transaction  won’t include category and brandDetails
  DAPITransactionTypeDefault = 0,
/// Each transaction object will have category and brandDetails properties.
  DAPITransactionTypeEnriched = 1,
/// Each transaction object will have a category property.
  DAPITransactionTypeCategorized = 2,
};


SWIFT_CLASS_NAMED("DAPITransactionsResponse")
@interface DAPITransactionsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<DAPITransaction *> * _Nonnull transactions;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end


SWIFT_CLASS_NAMED("DAPITransferBound")
@interface DAPITransferBound : NSObject
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, readonly, strong) NSNumber * _Nullable minimumValue;
@property (nonatomic, copy) NSString * _Nullable type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPITransferResult")
@interface DAPITransferResult : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable operationID;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@property (nonatomic, readonly, copy) NSString * _Nullable referenceNumber;
@property (nonatomic, readonly, strong) NSNumber * _Nullable amountValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCodeValue;
@property (nonatomic, readonly, copy) NSString * _Nullable remark;
@property (nonatomic, copy) NSString * _Nullable senderAccountID;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPITransferType, "DAPITransferType", open) {
  DAPITransferTypeNormal = 0,
  DAPITransferTypeWire = 1,
};


SWIFT_CLASS_NAMED("DAPIUICustomization")
@interface DAPIUICustomization : NSObject
@property (nonatomic) enum DAPITheme theme;
@property (nonatomic, strong) DAPIColor * _Nonnull primaryColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIWireAddress")
@interface DAPIWireAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable building;
@property (nonatomic, copy) NSString * _Nullable area;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable flat;
@property (nonatomic, copy) NSString * _Nullable full;
@property (nonatomic, copy) NSString * _Nullable poBox;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable zipCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIWireBeneficiary")
@interface DAPIWireBeneficiary : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable nickname;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable routingNumber;
@property (nonatomic, copy) NSString * _Nullable receiverAccountType;
@property (nonatomic, copy) NSString * _Nullable receiverType;
@property (nonatomic, copy) NSString * _Nullable zipCode;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable bankName;
@property (nonatomic, strong) DAPILineAddress * _Nullable linesAddress;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Dapi is a main class that provides all Dapi APIs where you you can use it to initiate payments and data integration.
SWIFT_CLASS_NAMED("Dapi")
@interface Dapi : NSObject
/// Returns the shared defaults object.
///
/// returns:
/// The shared defaults object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Dapi * _Nonnull shared;)
+ (Dapi * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) DAPIUICustomization * _Nonnull uiCustomization;
/// A singleton object that you can set once or update any time you want to add or modify the configurations
/// This provides global level properties that the developer can tweak . You can change the following configurations:
/// <ul>
///   <li>
///     Countries (countries that your users will have access to)
///   </li>
///   <li>
///     Extra Fields (you can send custom body parameters or headers along the API calls)
///   </li>
///   <li>
///     Result screens (whether result screens are displayed or not)
///     For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration">Visit Our Docs</a>
///   </li>
/// </ul>
@property (nonatomic, strong) DAPIConfigurations * _Nonnull configurations;
@property (nonatomic, copy) NSString * _Null_unspecified clientUserID;
@property (nonatomic, readonly) enum DAPIEnvironment environment;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// The entry point of Dapi SDK
/// This method should be called after the app is launched and before using Dapi services.
/// important:
/// This method should be called from the <em>main</em> thread
/// \param appKey AppKey App Key is obtained from from the dashboard <a href="https://docs.dapi.com/docs/ios-sdk-installation#1-get-your-api-key-appkey">Get Your App Key</a>.
///
/// \param environment Enum values <code>sandbox</code> or <code>production</code>. <code>production</code> provides access to real banks, <code>sandbox</code> can be used to simulate banks’ behavior in a testing environment - learn more: <a href="https://docs.dapi.com/docs/dapi-api-sandbox">Get Started with Sandbox</a>.
///
/// \param clientUserID Used to distinguish between different end-users. The value for <code>clientUserID</code> needs to be set by you. We recommend setting <code>clientUserID</code> to your actual user ID that you use to distinguish between users.
///
- (void)startWithAppKey:(NSString * _Nonnull)appKey environment:(enum DAPIEnvironment)environment clientUserID:(NSString * _Nonnull)clientUserID completion:(void (^ _Nullable)(Dapi * _Nullable, NSError * _Nullable))completion;
/// Information about your connection to the bank
/// When you authenticate and login through Dapi, a <em>DAPIBankConnection</em> object is created and stored in the local cache containing information about your connection to the bank, so that you don’t have to authenticate and login again every time you open the app. every connection associated with <code>app_key</code>, <code>run_environment</code> and <code>client_ID</code>
/// For more information, see <a href="https://docs.dapi.com/docs/ios-sdk-configuration">Dapi Documentation.</a>
@property (nonatomic, readonly, copy) NSArray<DAPIBankConnection *> * _Nonnull bankConnections;
@end





@interface Dapi (SWIFT_EXTENSION(DapiSDK))
- (void)createBankConnectionWithParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(DAPIBankConnection * _Nullable, NSError * _Nullable))completion;
- (void)delinkWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIResponseResult * _Nullable, NSError * _Nullable))completion;
- (void)accountMetadataWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIAccountMetadataResponse * _Nullable, NSError * _Nullable))completion;
- (void)identityWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIIdentityResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankAccountsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankAccountsResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankCardsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankCardsResponse * _Nullable, NSError * _Nullable))completion;
- (void)cardTransactionsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection cardID:(NSString * _Nonnull)cardID type:(enum DAPITransactionType)type from:(NSDate * _Nonnull)startDate to:(NSDate * _Nonnull)endDate completion:(void (^ _Nonnull)(DAPITransactionsResponse * _Nullable, NSError * _Nullable))completion;
- (void)accountTransactionsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection bankAccountID:(NSString * _Nonnull)bankAccountID type:(enum DAPITransactionType)type from:(NSDate * _Nonnull)startDate to:(NSDate * _Nonnull)endDate completion:(void (^ _Nonnull)(DAPITransactionsResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankBeneficiariesWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankBeneficiariesResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankWireBeneficiariesWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankWireBeneficiariesResponse * _Nullable, NSError * _Nullable))completion;
- (void)createBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection beneficiaryDetails:(DAPIBeneficiary * _Nonnull)beneficiary completion:(void (^ _Nonnull)(DAPIResponseResult * _Nullable, NSError * _Nullable))completion;
- (void)createWireBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection beneficiaryDetails:(DAPIWireBeneficiary * _Nonnull)beneficiary completion:(void (^ _Nonnull)(DAPIResponseResult * _Nullable, NSError * _Nullable))completion;
- (void)createTransferToExistBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)accountID receiverBeneficiaryID:(NSString * _Nonnull)beneficiaryID amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createWireTransferToExistBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)accountID receiverBeneficiaryID:(NSString * _Nonnull)beneficiaryID amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createWireTransferWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)senderBankAccountID receiverBeneficiary:(DAPIWireBeneficiary * _Nonnull)beneficiary amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createTransferWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)senderBankAccountID receiverBeneficiary:(DAPIBeneficiary * _Nullable)beneficiary amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createACHPullTransferWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)senderBankAccountID amount:(float)amount description:(NSString * _Nonnull)description completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)nymcardLoadFundsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection token:(NSString * _Nonnull)token senderBankAccountID:(NSString * _Nonnull)senderBankAccountID amount:(float)amount completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS_NAMED("DapiMFAColorScheme")
@interface DapiMFAColorScheme : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull secondaryColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSHTTPURLResponse;

SWIFT_CLASS_NAMED("DapiURLResponse")
@interface DapiURLResponse : NSObject
@property (nonatomic, strong) NSHTTPURLResponse * _Nonnull response;
@property (nonatomic, copy) NSData * _Nullable data;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MFAQueryChoice;

SWIFT_CLASS_NAMED("MFAParameter")
@interface MFAParameter : NSObject
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, copy) NSString * _Nullable query;
@property (nonatomic, copy) NSString * _Nullable queryType;
@property (nonatomic, copy) NSString * _Nullable answer;
@property (nonatomic, copy) NSArray<MFAQueryChoice *> * _Nullable queryChoices;
@property (nonatomic, readonly, copy) NSString * _Nullable hint;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull index;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7DapiSDK14MFAQueryChoice")
@interface MFAQueryChoice : NSObject
@property (nonatomic, copy) NSString * _Nullable content;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull index;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface NSError (SWIFT_EXTENSION(DapiSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull knownErrorType;)
+ (NSArray<NSString *> * _Nonnull)knownErrorType SWIFT_WARN_UNUSED_RESULT;
/// A string containing the description of the error.
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiErrorMessage;
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiErrorType;
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiOperationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiStatusCode;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
@end


@interface NSString (SWIFT_EXTENSION(DapiSDK))
- (UIColor * _Nullable)onPrimaryColor SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIApplication (SWIFT_EXTENSION(DapiSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIViewController * _Nullable dapiTopMostController;)
+ (UIViewController * _Nullable)dapiTopMostController SWIFT_WARN_UNUSED_RESULT;
@end


@class UIEvent;

@interface UIButton (SWIFT_EXTENSION(DapiSDK))
- (void)sendAction:(SEL _Nonnull)action to:(id _Nullable)target forEvent:(UIEvent * _Nullable)event;
@end



SWIFT_CLASS("_TtC7DapiSDK11UIDapiLabel")
@interface UIDapiLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7DapiSDK10UIDapiView")
@interface UIDapiView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIImage (SWIFT_EXTENSION(DapiSDK))
+ (UIImage * _Nullable)gifWithDapiResourcename:(NSString * _Nonnull)dapiResourcename SWIFT_WARN_UNUSED_RESULT;
@end






#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef DAPISDK_SWIFT_H
#define DAPISDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#import <DapiSDK/DapiSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DapiSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class DAPILineAddress;
@class DAPIAccountRange;
@class DAPIPair;
@class DAPITransferBound;

SWIFT_CLASS_NAMED("DAPIAccountMetadata")
@interface DAPIAccountMetadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull bankID;
@property (nonatomic, readonly, strong) DAPILineAddress * _Nullable address;
@property (nonatomic, readonly, copy) NSString * _Nullable bankName;
@property (nonatomic, readonly, copy) NSString * _Nullable bankType;
@property (nonatomic, readonly, strong) DAPIAccountRange * _Nullable beneficiaryCoolDownPeriod;
@property (nonatomic, readonly, copy) NSString * _Nullable branchAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable branchName;
@property (nonatomic, readonly, strong) DAPIPair * _Nullable country;
@property (nonatomic, readonly) BOOL isCreateBenefEndpointRequired;
@property (nonatomic, readonly) BOOL isCreateWireBenefEndpointRequired;
@property (nonatomic, readonly, copy) NSString * _Nullable sortCode;
@property (nonatomic, readonly, copy) NSString * _Nullable swiftCode;
@property (nonatomic, readonly, strong) DAPIAccountRange * _Nullable transactionRange;
@property (nonatomic, readonly, copy) NSArray<DAPITransferBound *> * _Nullable transferBounds;
@property (nonatomic, readonly) BOOL willNewlyAddedBenefExistBeforeCoolDownPeriod;
@end


SWIFT_CLASS_NAMED("DAPIAccountMetadataResponse")
@interface DAPIAccountMetadataResponse : NSObject
@property (nonatomic, readonly, strong) DAPIAccountMetadata * _Nonnull accountsMetadata;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

@class NSNumber;

SWIFT_CLASS_NAMED("DAPIAccountRange")
@interface DAPIAccountRange : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull unit;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull rangeValue;
@end


SWIFT_CLASS_NAMED("DAPIAddress")
@interface DAPIAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable flat;
@property (nonatomic, copy) NSString * _Nullable building;
@property (nonatomic, copy) NSString * _Nullable full;
@property (nonatomic, copy) NSString * _Nullable area;
@property (nonatomic, copy) NSString * _Nullable poBox;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable zipCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DAPIAutoFlowVC;
@class DAPIBankAccount;
@class DAPIBeneficiary;
@class DAPIWireBeneficiary;
@class DAPITransferResult;

SWIFT_PROTOCOL_NAMED("DAPIAutoFlowDelegate")
@protocol DAPIAutoFlowDelegate
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow willTransferAmount:(float)amount fromAccount:(DAPIBankAccount * _Nonnull)senderAccount;
@optional
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow transferDidFailFrom:(DAPIBankAccount * _Nullable)senderAccount to:(DAPIBeneficiary * _Nullable)beneficiary with:(NSError * _Nonnull)error;
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow transferDidFailFrom:(DAPIBankAccount * _Nullable)senderAccount toWireBeneficiary:(DAPIWireBeneficiary * _Nullable)beneficiary with:(NSError * _Nonnull)error;
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow achPullTransferDidFailFrom:(DAPIBankAccount * _Nullable)senderAccount with:(NSError * _Nonnull)error;
@required
- (void)autoFlow:(DAPIAutoFlowVC * _Nonnull)autoFlow transferDidSuccessFrom:(DAPIBankAccount * _Nonnull)senderAccount transferResult:(DAPITransferResult * _Nonnull)transferResult;
- (void)autoFlowUserDidCanceled:(DAPIAutoFlowVC * _Nonnull)autoFlow;
@end

@class DAPIBankConnection;
enum DAPITransferType : NSInteger;
@class NSCoder;
@class UIViewController;
@class NSBundle;

/// Initiate a payment and automatically takes care of all requirements for adding a beneficiary as well as initiating a transfer.
/// <a href="https://docs.dapi.com/docs/ios-payment-api">Check How To Use Dapi AutoFlow </a>.
SWIFT_CLASS("_TtC7DapiSDK14DAPIAutoFlowVC")
@interface DAPIAutoFlowVC : UINavigationController
@property (nonatomic, copy) void (^ _Nullable transferDidSucceed)(DAPITransferResult * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable transferDidFail)(NSError * _Nonnull);
/// The object that acts as the delegate of the <code>DAPIAutoFlowVC</code>.
@property (nonatomic, weak) id <DAPIAutoFlowDelegate> _Nullable autoFlowDelegate;
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable successResultsScreenMessageManipulation)(DAPITransferResult * _Nullable);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable errorResultsScreenMessageManipulation)(NSError * _Nonnull);
/// Initiate a payment and automatically takes care of all requirements for adding a beneficiary as well as initiating a transfer.
/// <a href="https://docs.dapi.com/docs/ios-payment-api">Check How To Use Dapi AutoFlow </a>.
/// \param bankConnection A connection to the bank that will be used to call APIs upon. The connection will include details about the bank. <a href="https://docs.dapi.com/docs/ios-create-bank-connection">Check How To Create Bank Connection </a>.
///
/// \param account Account where the amount must be transferred from.If you don’t provide it, AutoFlow will start display bank accounts screen for your user to pick the account from it.
///
/// \param wireBeneficiary WireBeneficiary that will receive the money. If you are accepting a transfer into your own company’s account, you don’t need to set the parameter. You can simply add one in your dashboard under your app. The wireBeneficiary will automatically be set to that account from there. <em>Set it if you only use</em> [Wire API (US only)] (https://docs.dapi.com/docs/ios-wire-api-us)
///
/// \param beneficiary Beneficiary that will receive the amount. If in your use case the beneficiary is a constant, you can set the beneficiary on the Dapi Dashboard. It will be automatically used during a transfer by Dapi system.
///
/// \param transferType Set it with <code>wire</code> value <em>if you only use</em> <a href="https://docs.dapi.com/docs/ios-wire-api-us">Wire API (US only)</a>
///
/// \param amount Amount to be transferred. If you don’t set an amount SDK will display a screen with a numpad screen for your user to enter the amount.
///
/// \param remark Unique ID generated by your application. Can be used to track the transfer during settlement. <em>NB! No special characters allowed</em>.
///
- (nonnull instancetype)initWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection account:(DAPIBankAccount * _Nullable)account wireBeneficiary:(DAPIWireBeneficiary * _Nullable)wireBeneficiary beneficiary:(DAPIBeneficiary * _Nullable)beneficiary transferType:(enum DAPITransferType)transferType amount:(float)amount remark:(NSString * _Nullable)remark OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBankConnectionForACHPullTransfer:(DAPIBankConnection * _Nonnull)connection account:(DAPIBankAccount * _Nullable)account amount:(float)amount description:(NSString * _Nonnull)description OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBankConnectionForNymCard:(DAPIBankConnection * _Nonnull)connection token:(NSString * _Nonnull)token account:(DAPIBankAccount * _Nullable)account amount:(float)amount OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class DPCNumPadDisplayViewController;

@interface DAPIAutoFlowVC (SWIFT_EXTENSION(DapiSDK)) <DPCNumPadDisplayViewControllerDelegate>
- (void)numPadDisplayViewController:(DPCNumPadDisplayViewController * _Nonnull)viewController didSubmitValue:(double)value;
@end

@class MessageViewController;

@interface DAPIAutoFlowVC (SWIFT_EXTENSION(DapiSDK)) <MessageViewControllerDelegate>
- (void)messageViewControllerDidTapButton:(MessageViewController * _Nonnull)messageViewController error:(NSError * _Nullable)error;
@end

@class UIPresentationController;

@interface DAPIAutoFlowVC (SWIFT_EXTENSION(DapiSDK)) <UIAdaptivePresentationControllerDelegate>
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
@end




SWIFT_CLASS_NAMED("DAPIBalance")
@interface DAPIBalance : NSObject
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic) float amount;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@end


SWIFT_CLASS_NAMED("DAPIBankAccount")
@interface DAPIBankAccount : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull accountID;
@property (nonatomic, copy) NSString * _Nullable number;
@property (nonatomic, copy) NSString * _Nullable iban;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, strong) DAPIBalance * _Nonnull balance;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
@end


SWIFT_CLASS_NAMED("DAPIBankAccountsResponse")
@interface DAPIBankAccountsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<DAPIBankAccount *> * _Nonnull accounts;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end


SWIFT_CLASS("_TtC7DapiSDK18DAPIBankAccountsVC")
@interface DAPIBankAccountsVC : UIViewController
@property (nonatomic, copy) void (^ _Nullable accountDidSelect)(DAPIBankAccount * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable accountSelectionFailed)(NSError * _Nullable);
- (nonnull instancetype)initWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@class UITableView;
@class NSIndexPath;
@class UITableViewCell;

@interface DAPIBankAccountsVC (SWIFT_EXTENSION(DapiSDK)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class DAPIBankBeneficiary;

SWIFT_CLASS_NAMED("DAPIBankBeneficiariesResponse")
@interface DAPIBankBeneficiariesResponse : NSObject
@property (nonatomic, copy) NSArray<DAPIBankBeneficiary *> * _Nonnull beneficiaries;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end


SWIFT_CLASS_NAMED("DAPIBankBeneficiary")
@interface DAPIBankBeneficiary : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull beneficiaryID;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable iban;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable status;
@end

enum DAPICardStatus : NSInteger;
@class DAPICardBalance;
@class NSDate;

SWIFT_CLASS_NAMED("DAPIBankCard")
@interface DAPIBankCard : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull cardID;
@property (nonatomic, copy) NSString * _Nullable cardNumber;
@property (nonatomic, readonly, strong) NSNumber * _Nullable creditLimitValue;
@property (nonatomic, readonly) enum DAPICardStatus cardStatus;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, strong) DAPICardBalance * _Nullable balance;
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, readonly, copy) NSDate * _Nullable cardExpiryDate;
@end


SWIFT_CLASS_NAMED("DAPIBankCardsResponse")
@interface DAPIBankCardsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<DAPIBankCard *> * _Nonnull cards;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

@class DAPIBankInfo;

SWIFT_CLASS_NAMED("DAPIBankConnection")
@interface DAPIBankConnection : NSObject
@property (nonatomic, copy) NSString * _Nonnull userSecret;
@property (nonatomic, copy) NSString * _Nonnull connectionID;
@property (nonatomic, copy) NSString * _Nonnull userID;
@property (nonatomic, copy) NSString * _Nonnull tokenID;
@property (nonatomic, copy) NSString * _Nonnull clientUserID;
@property (nonatomic, strong) DAPIBankInfo * _Nonnull bankInfo;
@property (nonatomic, readonly) NSUInteger hash;
- (NSDictionary<NSString *, id> * _Nonnull)getParameters SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("DAPIBankInfo")
@interface DAPIBankInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull bankId;
@property (nonatomic, copy) NSString * _Nonnull bankFullName;
@property (nonatomic, copy) NSString * _Nullable bankShortName;
@property (nonatomic, copy) NSString * _Nullable bankFullLogoPng;
@property (nonatomic, copy) NSString * _Nullable bankHalfLogoPng;
@property (nonatomic, copy) NSString * _Nullable bankMiniLogoPng;
@property (nonatomic, copy) NSString * _Nullable primaryColor;
@property (nonatomic, copy) NSString * _Nullable secondaryColor;
@property (nonatomic, copy) NSString * _Nullable swiftCode;
@property (nonatomic, copy) NSString * _Nullable countryName;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("DAPIBankTransactionBrand")
@interface DAPIBankTransactionBrand : NSObject
@property (nonatomic, copy) NSString * _Nullable logo;
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DAPIBankWireBeneficiary;

SWIFT_CLASS_NAMED("DAPIBankWireBeneficiariesResponse")
@interface DAPIBankWireBeneficiariesResponse : NSObject
@property (nonatomic, copy) NSArray<DAPIBankWireBeneficiary *> * _Nonnull beneficiaries;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

@class DAPIWireAddress;

SWIFT_CLASS_NAMED("DAPIBankWireBeneficiary")
@interface DAPIBankWireBeneficiary : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull beneficiaryID;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) DAPIWireAddress * _Nullable address;
@property (nonatomic, copy) NSString * _Nullable bankName;
@property (nonatomic, copy) NSString * _Nullable routingNumber;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable status;
@end


SWIFT_CLASS_NAMED("DAPIBeneficiary")
@interface DAPIBeneficiary : NSObject
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable bankName;
@property (nonatomic, copy) NSString * _Nullable swiftCode;
@property (nonatomic, copy) NSString * _Nullable iban;
@property (nonatomic, copy) NSString * _Nullable phoneNumber;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable branchAddress;
@property (nonatomic, copy) NSString * _Nullable branchName;
@property (nonatomic, copy) NSString * _Nullable nickname;
@property (nonatomic, strong) DAPILineAddress * _Nullable linesAddress;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPICardBalance")
@interface DAPICardBalance : NSObject
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, copy) NSString * _Nullable cardNumber;
@property (nonatomic, copy) NSString * _Nullable dueDate;
@property (nonatomic, readonly, strong) NSNumber * _Nullable outstandingBalanceValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable availableBalanceValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable amountDueValue;
@property (nonatomic, readonly, copy) NSDate * _Nullable paymentDueDate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPICardStatus, "DAPICardStatus", open) {
  DAPICardStatusActive = 0,
  DAPICardStatusDisabled = 1,
  DAPICardStatusBlocked = 2,
  DAPICardStatusUnknown = 3,
};

@class UIColor;

SWIFT_CLASS_NAMED("DAPIColor")
@interface DAPIColor : NSObject
@property (nonatomic, copy) NSString * _Nullable lightModeHexaCode;
@property (nonatomic, copy) NSString * _Nullable darkModeHexaCode;
@property (nonatomic, readonly, strong) UIColor * _Nonnull lightModeColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull darkModeColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum DAPILanguage : NSInteger;
@class NSURLRequest;
@class DapiURLResponse;
@class NSData;

/// Properties that the developer can tweak. For more details <a href="https://docs.dapi.com/docs/ios-sdk-configuration">Visit Our Docs</a>
SWIFT_CLASS_NAMED("DAPIConfigurations")
@interface DAPIConfigurations : NSObject
@property (nonatomic) BOOL showLogos;
/// You can show the transfer result screen if it success.  For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration#show-transfer-result-screen">Visit Our Docs</a>
@property (nonatomic) BOOL showTransferSuccessfulResult;
/// You can show the transfer result screen if it fails.  For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration#show-transfer-result-screen">Visit Our Docs</a>
@property (nonatomic) BOOL showTransferErrorResult;
/// Set SDK language, the default value is english For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration#create-sdk-configurations">Visit Our Docs</a>
@property (nonatomic) enum DAPILanguage language;
/// You can show the Dapi networking requests  logs in the debug console
@property (nonatomic) BOOL enableNetworkingLogging;
/// Completion fires before sending the request to the backend server.
/// If you will use this completion , you need to return the request in a formate that required from your backend server.
@property (nonatomic, copy) NSURLRequest * _Nonnull (^ _Nullable requestInterceptionCompletion)(DAPIBankConnection * _Nullable, NSURLRequest * _Nonnull);
/// Completion fires after receiving the response from the backend server.
/// If you will use this completion , you need to return the response in a in a formate that required from DAPI SDK.
@property (nonatomic, copy) NSData * _Nullable (^ _Nullable responseInterceptionCompletion)(DAPIBankConnection * _Nullable, DapiURLResponse * _Nonnull);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class DAPIConnectVC;

SWIFT_PROTOCOL("_TtP7DapiSDK19DAPIConnectDelegate_")
@protocol DAPIConnectDelegate
/// Tells the delegate that user successfully authenticated
- (void)dapiConnect:(DAPIConnectVC * _Nonnull)dapiConnect didSuccessfullyConnectTo:(NSString * _Nullable)bankID bankConnection:(DAPIBankConnection * _Nonnull)bankConnection;
/// Tells the delegate that bank connection failed with error message
- (void)dapiConnect:(DAPIConnectVC * _Nonnull)dapiConnect didFailConnectingWith:(NSString * _Nonnull)error;
/// Tells the delegate that user closed <code>dapiConnect</code> ViewController
- (void)dapiConnectUserDidCancel:(DAPIConnectVC * _Nonnull)dapiConnect;
@end


/// Create bank connection using connect layer
/// All Bank Connections need to be established through Dapi’s Connect Layer. Connect Layer is already embedded in the SDK and allows the users to choose the desired bank and provide their credentials.
/// For more information, see <a href="https://docs.dapi.com/docs/ios-create-bank-connection#bank-connection-using-connect-layer">Dapi Documentation.</a>
SWIFT_CLASS("_TtC7DapiSDK13DAPIConnectVC")
@interface DAPIConnectVC : UIViewController
@property (nonatomic, weak) id <DAPIConnectDelegate> _Nullable delegate;
- (nonnull instancetype)initWithBankID:(NSString * _Nullable)bankID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface DAPIConnectVC (SWIFT_EXTENSION(DapiSDK)) <UIAdaptivePresentationControllerDelegate>
- (void)presentationControllerDidDismiss:(UIPresentationController * _Nonnull)presentationController;
@end


@interface DAPIConnectVC (SWIFT_EXTENSION(DapiSDK)) <MessageViewControllerDelegate>
- (void)messageViewControllerDidTapButton:(MessageViewController * _Nonnull)messageViewController error:(NSError * _Nullable)error;
@end

@class WKWebView;
@class WKWebViewConfiguration;
@class WKNavigationAction;
@class WKWindowFeatures;

@interface DAPIConnectVC (SWIFT_EXTENSION(DapiSDK)) <WKNavigationDelegate, WKUIDelegate>
- (WKWebView * _Nullable)webView:(WKWebView * _Nonnull)webView createWebViewWithConfiguration:(WKWebViewConfiguration * _Nonnull)configuration forNavigationAction:(WKNavigationAction * _Nonnull)navigationAction windowFeatures:(WKWindowFeatures * _Nonnull)windowFeatures SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("DAPICoolDownPeriod")
@interface DAPICoolDownPeriod : NSObject
@property (nonatomic, copy) NSString * _Nullable unit;
@property (nonatomic, readonly, strong) NSNumber * _Nullable coolDownPeriodValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Dapi run environments
typedef SWIFT_ENUM_NAMED(NSInteger, DAPIEnvironment, "DAPIEnvironment", open) {
/// Allows you to run with real users and financial institutions with the full Dapi API.
  DAPIEnvironmentProduction = 0,
/// Allows you to simulate users and financial institutions with the full Dapi API, learn more: <a href="https://docs.dapi.com/docs/dapi-api-sandbox">Get Started with Sandbox</a>.
  DAPIEnvironmentSandbox = 1,
};


SWIFT_CLASS_NAMED("DAPIIdentification")
@interface DAPIIdentification : NSObject
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class DAPINumber;

SWIFT_CLASS_NAMED("DAPIIdentity")
@interface DAPIIdentity : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable nationality;
@property (nonatomic, copy) NSString * _Nullable dateOfBirth;
@property (nonatomic, copy) NSString * _Nullable emailAddress;
@property (nonatomic, strong) DAPIAddress * _Nullable address;
@property (nonatomic, copy) NSArray<DAPINumber *> * _Nullable numbers;
@property (nonatomic, copy) NSArray<DAPIIdentification *> * _Nullable identifications;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIIdentityResponse")
@interface DAPIIdentityResponse : NSObject
@property (nonatomic, readonly, strong) DAPIIdentity * _Nonnull identity;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPILanguage, "DAPILanguage", open) {
  DAPILanguageAr = 0,
  DAPILanguageEn = 1,
};


SWIFT_CLASS_NAMED("DAPILineAddress")
@interface DAPILineAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable line1;
@property (nonatomic, copy) NSString * _Nullable line2;
@property (nonatomic, copy) NSString * _Nullable line3;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPINumber")
@interface DAPINumber : NSObject
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIPair")
@interface DAPIPair : NSObject
@property (nonatomic, copy) NSString * _Nullable code;
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIResponseResult")
@interface DAPIResponseResult : NSObject
@property (nonatomic, copy) NSString * _Nullable operationID;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCodeValue;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) DAPICoolDownPeriod * _Nullable coolDownPeriod;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPITheme, "DAPITheme", open) {
  DAPIThemeDark = 0,
  DAPIThemeDynamic = 1,
  DAPIThemeLight = 2,
};


SWIFT_CLASS_NAMED("DAPITransaction")
@interface DAPITransaction : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable type;
@property (nonatomic, readonly) float amount;
@property (nonatomic, readonly, strong) NSNumber * _Nullable beforeAmountValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable afterAmountValue;
@property (nonatomic, readonly, copy) NSString * _Nullable transactionDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable details;
@property (nonatomic, readonly, strong) DAPIPair * _Nullable currency;
@property (nonatomic, readonly, copy) NSString * _Nullable reference;
@property (nonatomic, readonly, strong) DAPIBankTransactionBrand * _Nullable brandDetails;
@property (nonatomic, readonly, copy) NSString * _Nullable category;
@property (nonatomic, readonly, copy) NSString * _Nullable date;
@property (nonatomic, readonly, copy) NSDate * _Nullable transactionDate;
@end

/// Enum to specify transactions type.
typedef SWIFT_ENUM_NAMED(NSInteger, DAPITransactionType, "DAPITransactionType", open) {
/// Each transaction  won’t include category and brandDetails
  DAPITransactionTypeDefault = 0,
/// Each transaction object will have category and brandDetails properties.
  DAPITransactionTypeEnriched = 1,
/// Each transaction object will have a category property.
  DAPITransactionTypeCategorized = 2,
};


SWIFT_CLASS_NAMED("DAPITransactionsResponse")
@interface DAPITransactionsResponse : NSObject
@property (nonatomic, readonly, copy) NSArray<DAPITransaction *> * _Nonnull transactions;
@property (nonatomic, readonly, copy) NSString * _Nonnull operationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly) BOOL success;
@end


SWIFT_CLASS_NAMED("DAPITransferBound")
@interface DAPITransferBound : NSObject
@property (nonatomic, strong) DAPIPair * _Nullable currency;
@property (nonatomic, readonly, strong) NSNumber * _Nullable minimumValue;
@property (nonatomic, copy) NSString * _Nullable type;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPITransferResult")
@interface DAPITransferResult : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable operationID;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
@property (nonatomic, readonly, copy) NSString * _Nullable referenceNumber;
@property (nonatomic, readonly, strong) NSNumber * _Nullable amountValue;
@property (nonatomic, readonly, strong) NSNumber * _Nullable statusCodeValue;
@property (nonatomic, readonly, copy) NSString * _Nullable remark;
@property (nonatomic, copy) NSString * _Nullable senderAccountID;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, DAPITransferType, "DAPITransferType", open) {
  DAPITransferTypeNormal = 0,
  DAPITransferTypeWire = 1,
};


SWIFT_CLASS_NAMED("DAPIUICustomization")
@interface DAPIUICustomization : NSObject
@property (nonatomic) enum DAPITheme theme;
@property (nonatomic, strong) DAPIColor * _Nonnull primaryColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIWireAddress")
@interface DAPIWireAddress : NSObject
@property (nonatomic, copy) NSString * _Nullable building;
@property (nonatomic, copy) NSString * _Nullable area;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable flat;
@property (nonatomic, copy) NSString * _Nullable full;
@property (nonatomic, copy) NSString * _Nullable poBox;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable zipCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DAPIWireBeneficiary")
@interface DAPIWireBeneficiary : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable nickname;
@property (nonatomic, copy) NSString * _Nullable accountNumber;
@property (nonatomic, copy) NSString * _Nullable routingNumber;
@property (nonatomic, copy) NSString * _Nullable receiverAccountType;
@property (nonatomic, copy) NSString * _Nullable receiverType;
@property (nonatomic, copy) NSString * _Nullable zipCode;
@property (nonatomic, copy) NSString * _Nullable country;
@property (nonatomic, copy) NSString * _Nullable state;
@property (nonatomic, copy) NSString * _Nullable city;
@property (nonatomic, copy) NSString * _Nullable bankName;
@property (nonatomic, strong) DAPILineAddress * _Nullable linesAddress;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Dapi is a main class that provides all Dapi APIs where you you can use it to initiate payments and data integration.
SWIFT_CLASS_NAMED("Dapi")
@interface Dapi : NSObject
/// Returns the shared defaults object.
///
/// returns:
/// The shared defaults object.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Dapi * _Nonnull shared;)
+ (Dapi * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) DAPIUICustomization * _Nonnull uiCustomization;
/// A singleton object that you can set once or update any time you want to add or modify the configurations
/// This provides global level properties that the developer can tweak . You can change the following configurations:
/// <ul>
///   <li>
///     Countries (countries that your users will have access to)
///   </li>
///   <li>
///     Extra Fields (you can send custom body parameters or headers along the API calls)
///   </li>
///   <li>
///     Result screens (whether result screens are displayed or not)
///     For more details, <a href="https://docs.dapi.com/docs/ios-sdk-configuration">Visit Our Docs</a>
///   </li>
/// </ul>
@property (nonatomic, strong) DAPIConfigurations * _Nonnull configurations;
@property (nonatomic, copy) NSString * _Null_unspecified clientUserID;
@property (nonatomic, readonly) enum DAPIEnvironment environment;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// The entry point of Dapi SDK
/// This method should be called after the app is launched and before using Dapi services.
/// important:
/// This method should be called from the <em>main</em> thread
/// \param appKey AppKey App Key is obtained from from the dashboard <a href="https://docs.dapi.com/docs/ios-sdk-installation#1-get-your-api-key-appkey">Get Your App Key</a>.
///
/// \param environment Enum values <code>sandbox</code> or <code>production</code>. <code>production</code> provides access to real banks, <code>sandbox</code> can be used to simulate banks’ behavior in a testing environment - learn more: <a href="https://docs.dapi.com/docs/dapi-api-sandbox">Get Started with Sandbox</a>.
///
/// \param clientUserID Used to distinguish between different end-users. The value for <code>clientUserID</code> needs to be set by you. We recommend setting <code>clientUserID</code> to your actual user ID that you use to distinguish between users.
///
- (void)startWithAppKey:(NSString * _Nonnull)appKey environment:(enum DAPIEnvironment)environment clientUserID:(NSString * _Nonnull)clientUserID completion:(void (^ _Nullable)(Dapi * _Nullable, NSError * _Nullable))completion;
/// Information about your connection to the bank
/// When you authenticate and login through Dapi, a <em>DAPIBankConnection</em> object is created and stored in the local cache containing information about your connection to the bank, so that you don’t have to authenticate and login again every time you open the app. every connection associated with <code>app_key</code>, <code>run_environment</code> and <code>client_ID</code>
/// For more information, see <a href="https://docs.dapi.com/docs/ios-sdk-configuration">Dapi Documentation.</a>
@property (nonatomic, readonly, copy) NSArray<DAPIBankConnection *> * _Nonnull bankConnections;
@end





@interface Dapi (SWIFT_EXTENSION(DapiSDK))
- (void)createBankConnectionWithParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(DAPIBankConnection * _Nullable, NSError * _Nullable))completion;
- (void)delinkWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIResponseResult * _Nullable, NSError * _Nullable))completion;
- (void)accountMetadataWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIAccountMetadataResponse * _Nullable, NSError * _Nullable))completion;
- (void)identityWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIIdentityResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankAccountsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankAccountsResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankCardsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankCardsResponse * _Nullable, NSError * _Nullable))completion;
- (void)cardTransactionsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection cardID:(NSString * _Nonnull)cardID type:(enum DAPITransactionType)type from:(NSDate * _Nonnull)startDate to:(NSDate * _Nonnull)endDate completion:(void (^ _Nonnull)(DAPITransactionsResponse * _Nullable, NSError * _Nullable))completion;
- (void)accountTransactionsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection bankAccountID:(NSString * _Nonnull)bankAccountID type:(enum DAPITransactionType)type from:(NSDate * _Nonnull)startDate to:(NSDate * _Nonnull)endDate completion:(void (^ _Nonnull)(DAPITransactionsResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankBeneficiariesWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankBeneficiariesResponse * _Nullable, NSError * _Nullable))completion;
- (void)bankWireBeneficiariesWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection completion:(void (^ _Nonnull)(DAPIBankWireBeneficiariesResponse * _Nullable, NSError * _Nullable))completion;
- (void)createBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection beneficiaryDetails:(DAPIBeneficiary * _Nonnull)beneficiary completion:(void (^ _Nonnull)(DAPIResponseResult * _Nullable, NSError * _Nullable))completion;
- (void)createWireBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection beneficiaryDetails:(DAPIWireBeneficiary * _Nonnull)beneficiary completion:(void (^ _Nonnull)(DAPIResponseResult * _Nullable, NSError * _Nullable))completion;
- (void)createTransferToExistBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)accountID receiverBeneficiaryID:(NSString * _Nonnull)beneficiaryID amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createWireTransferToExistBeneficiaryWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)accountID receiverBeneficiaryID:(NSString * _Nonnull)beneficiaryID amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createWireTransferWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)senderBankAccountID receiverBeneficiary:(DAPIWireBeneficiary * _Nonnull)beneficiary amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createTransferWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)senderBankAccountID receiverBeneficiary:(DAPIBeneficiary * _Nullable)beneficiary amount:(float)amount remark:(NSString * _Nullable)remark completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)createACHPullTransferWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection senderBankAccountID:(NSString * _Nonnull)senderBankAccountID amount:(float)amount description:(NSString * _Nonnull)description completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
- (void)nymcardLoadFundsWithBankConnection:(DAPIBankConnection * _Nonnull)bankConnection token:(NSString * _Nonnull)token senderBankAccountID:(NSString * _Nonnull)senderBankAccountID amount:(float)amount completion:(void (^ _Nonnull)(DAPITransferResult * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS_NAMED("DapiMFAColorScheme")
@interface DapiMFAColorScheme : NSObject
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull secondaryColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSHTTPURLResponse;

SWIFT_CLASS_NAMED("DapiURLResponse")
@interface DapiURLResponse : NSObject
@property (nonatomic, strong) NSHTTPURLResponse * _Nonnull response;
@property (nonatomic, copy) NSData * _Nullable data;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MFAQueryChoice;

SWIFT_CLASS_NAMED("MFAParameter")
@interface MFAParameter : NSObject
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, copy) NSString * _Nullable query;
@property (nonatomic, copy) NSString * _Nullable queryType;
@property (nonatomic, copy) NSString * _Nullable answer;
@property (nonatomic, copy) NSArray<MFAQueryChoice *> * _Nullable queryChoices;
@property (nonatomic, readonly, copy) NSString * _Nullable hint;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull index;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7DapiSDK14MFAQueryChoice")
@interface MFAQueryChoice : NSObject
@property (nonatomic, copy) NSString * _Nullable content;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull index;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface NSError (SWIFT_EXTENSION(DapiSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull knownErrorType;)
+ (NSArray<NSString *> * _Nonnull)knownErrorType SWIFT_WARN_UNUSED_RESULT;
/// A string containing the description of the error.
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiErrorMessage;
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiErrorType;
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiOperationID;
@property (nonatomic, readonly, copy) NSString * _Nonnull dapiStatusCode;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionaryRepresentation;
@end


@interface NSString (SWIFT_EXTENSION(DapiSDK))
- (UIColor * _Nullable)onPrimaryColor SWIFT_WARN_UNUSED_RESULT;
@end


@interface UIApplication (SWIFT_EXTENSION(DapiSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIViewController * _Nullable dapiTopMostController;)
+ (UIViewController * _Nullable)dapiTopMostController SWIFT_WARN_UNUSED_RESULT;
@end


@class UIEvent;

@interface UIButton (SWIFT_EXTENSION(DapiSDK))
- (void)sendAction:(SEL _Nonnull)action to:(id _Nullable)target forEvent:(UIEvent * _Nullable)event;
@end



SWIFT_CLASS("_TtC7DapiSDK11UIDapiLabel")
@interface UIDapiLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7DapiSDK10UIDapiView")
@interface UIDapiView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIImage (SWIFT_EXTENSION(DapiSDK))
+ (UIImage * _Nullable)gifWithDapiResourcename:(NSString * _Nonnull)dapiResourcename SWIFT_WARN_UNUSED_RESULT;
@end






#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
